#ROUTING

1.) Install react-router-dom
        npm install react-router-dom

2.) Create routing configuration in App.js

3.) import {createBrowserRouter} from "react-router-dom"
      -- will create routing configuration in App.js file (top most file)

4.) 
    const appRouter = createBrowserRouter([
        {
        path: "/",
        element: <AppLayout />,
        },
        {
        path: "/about",
        element: <About />,
        },
    ]);      

5.) Provide the configuration to render it.
    import {RouterProvider} from "react-router-dom"
    -- RouterProvider will provider will provide the configuration to our app.

root.render(<RouterProvider router={appRouter} />);

6.) react-router-dom provides the hook, useRouteError --> It gives more information about the error
    const err = useRouteError();

7.) Header page should always be there. Keep the header intact
    and change the body as per the path.
    Hence creating children routes.

    const appRouter = createBrowserRouter([
  {
    path: "/",
    element: <AppLayout />,
    children: [
      {
        path: "/",
        element: <Body />,
      },
      {
        path: "/about",
        element: <About />,
      },
      {
        path: "/restaurants/:resId",
        element: <RestaurantMenu />,
      },
    ],
    errorElement: <Error />,
  },
]);

In order to put these children. we use <Outlet/> from "react-router-dom"

const AppLayout = () => {
  return (
    <div className="app">
      <Header />
      <Outlet />
    </div>
  );
};

8.)       <li>
            <a href="/about">About Us</a>
          </li>
    Using <a></a> the page reloads. But navigating to different links can be done without reloading the 
    page.
    react-router-dom gives <Link></Link> tag which works exactly like <a></a> but without reloading the 
    page.

    <Link to=""></Link> behind the scenes uses <a></a>

    Link is a wrapper over anchor tag. react-router-dom will keep the track that this is <Link></Link>
    and we don't have to refresh the page.

    This is called as SINGLE PAGE APPLICATION (SPA)
     Navigating from one page to another is just changing the component and not reloading the page.


-- There are two types of routing in web apps
   a.) Client Side Routing
        - There is no network call being made. As in the first load, we have all the components like 
        About, Home in our client. And on clicking "About" the component is just navigating to About.
        It's not reloading the whole page.
        Hence, it's Single Page Application (SPA) via client side routing

   b.) Server Side Routing 
        - Suppose we have index.html, about.html in <a></a>
        When we click on About, it makes the network call to about.html, fetches about.html and renders
        on the web page. And the whole page is getting reloaded


#DYNAMIC ROUTING
Creating RestaurantMenu as per the restaurants.

In App.js, in routing configuration -- we need to give dynamic path like below:


      {
        path: "/restaurants/:resId",
        element: <RestaurantMenu />,
      },

:resId - is dynamic 

In order to fetch the parameter details, react-router-dom gives us useParams() hook.

const params = useParams();

params is an object with the resId.